# Default values for hrms-v2-backend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: harbor.cuonghomelab.one/hrms-v2-dev-backend/backend
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "dev-0.9"

imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 2
    memory: 2Gi
  requests:
    cpu: 100m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  # targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: true
  size: 5Gi
  storageClass: longhorn-storage-delete
  mountPath: /app/dist/.temp

dependencies:
  redis:
    enabled: true
    condition: redis.enabled
  rabbitmq:
    enabled: true
    condition: rabbitmq.enabled
  postgresql:
    enabled: true
    condition: postgresql.enabled
  minio:
    enabled: true
    condition: minio.enabled

redis:
  architecture: "standalone"
  global:
    defaultStorageClass: "longhorn-storage-retain"
    redis:
      password: "Admin123"
  resources:
    requests:
      cpu: "1"
      memory: 1Gi
    limits:
      cpu: "2"
      memory: 2Gi

rabbitmq:
  persistence:
    storageClass: "longhorn-storage-retain"
    size: 1Gi
  auth:
    username: "admin"
    password: "Admin123"
    erlangCookie: secretcookie
  resources:
    requests:
      memory: 512Mi
      cpu: 300m
    limits:
      memory: 1Gi
      cpu: "1"

postgresql:
  global:
    storageClass: "longhorn-storage-retain"
  resources:
    requests:
      memory: 1Gi
      cpu: "1"
    limits:
      memory: 2Gi
      cpu: "2"
  auth:
    enablePostgresUser: true
    postgresPassword: Admin123
    username: admin
    password: Admin123
    database: database
  primary:
    persistence:
      existingClaim: "data-{{ .Release.Name }}-postgresql-0"
      storageClass: "longhorn-storage-retain"
      size: 8Gi
  readReplicas:
    persistence:
      enabled: false
      storageClass: "longhorn-storage-retain"
      size: 8Gi

minio:
  auth:
    rootUser: "admin"
    rootPassword: "Admin123"
    forceNewKeys: true

  mode:
    standalone # hoặc distributed


  # Thêm cấu hình API endpoint
  # extraEnvVars:
  #   - name: MINIO_SERVER_URL
  #     value: "http://localhost:9000" # URL khi port-forward
  #   - name: MINIO_BROWSER_REDIRECT_URL
  #     value: "http://localhost:9001" # Console URL khi port-forward

  service:
    type: LoadBalancer
    loadBalancerIP: 192.168.1.229
    ports:
      api: 9000
      console: 9001

  persistence:
    storageClass: "longhorn-storage-retain"
    size: 5Gi
    existingClaim: "{{ .Release.Name }}-minio"

  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 1Gi
      cpu: 500m

  # ingress:
  #   enabled: false
  #   hostname: minio.your-domain.com
  #   annotations:
  #     kubernetes.io/ingress.class: nginx
  #   tls: true

  # apiIngress:
  #   enabled: false
  #   hostname: minio-api.your-domain.com
  #   annotations:
  #     kubernetes.io/ingress.class: nginx
  #   tls: true
